import torch


q_vectors_256 = torch.tensor(
    [
        [8, 8, 8, 8, 8, 8, 8, 8],
        [43, 8, 8, 8, 8, 8, 8, 8],
        [25, 25, 8, 8, 8, 8, 8, 8],
        [8, 43, 8, 8, 8, 8, 8, 8],
        [43, 43, 8, 8, 8, 8, 8, 8],
        [25, 8, 25, 8, 8, 8, 8, 8],
        [8, 25, 25, 8, 8, 8, 8, 8],
        [8, 8, 43, 8, 8, 8, 8, 8],
        [43, 8, 43, 8, 8, 8, 8, 8],
        [8, 43, 43, 8, 8, 8, 8, 8],
        [43, 43, 43, 8, 8, 8, 8, 8],
        [25, 8, 8, 25, 8, 8, 8, 8],
        [8, 25, 8, 25, 8, 8, 8, 8],
        [8, 8, 25, 25, 8, 8, 8, 8],
        [8, 43, 25, 25, 8, 8, 8, 8],
        [25, 8, 43, 25, 8, 8, 8, 8],
        [8, 25, 43, 25, 8, 8, 8, 8],
        [8, 8, 8, 43, 8, 8, 8, 8],
        [43, 8, 8, 43, 8, 8, 8, 8],
        [43, 43, 8, 43, 8, 8, 8, 8],
        [43, 8, 43, 43, 8, 8, 8, 8],
        [25, 8, 8, 8, 25, 8, 8, 8],
        [8, 25, 8, 8, 25, 8, 8, 8],
        [8, 8, 25, 8, 25, 8, 8, 8],
        [25, 25, 25, 8, 25, 8, 8, 8],
        [8, 8, 8, 25, 25, 8, 8, 8],
        [8, 25, 8, 43, 25, 8, 8, 8],
        [8, 43, 25, 43, 25, 8, 8, 8],
        [8, 8, 8, 8, 43, 8, 8, 8],
        [43, 8, 8, 8, 43, 8, 8, 8],
        [43, 8, 43, 8, 43, 8, 8, 8],
        [43, 8, 8, 43, 43, 8, 8, 8],
        [25, 8, 8, 8, 8, 25, 8, 8],
        [8, 25, 8, 8, 8, 25, 8, 8],
        [8, 8, 25, 8, 8, 25, 8, 8],
        [25, 8, 43, 8, 8, 25, 8, 8],
        [8, 25, 43, 8, 8, 25, 8, 8],
        [8, 8, 8, 25, 8, 25, 8, 8],
        [43, 8, 8, 25, 8, 25, 8, 8],
        [8, 43, 8, 25, 8, 25, 8, 8],
        [8, 8, 43, 25, 8, 25, 8, 8],
        [25, 8, 8, 43, 8, 25, 8, 8],
        [8, 25, 8, 43, 8, 25, 8, 8],
        [8, 8, 25, 43, 8, 25, 8, 8],
        [8, 25, 43, 43, 8, 25, 8, 8],
        [8, 8, 8, 8, 25, 25, 8, 8],
        [43, 8, 8, 8, 25, 25, 8, 8],
        [8, 43, 8, 8, 25, 25, 8, 8],
        [8, 8, 43, 8, 25, 25, 8, 8],
        [43, 25, 8, 25, 25, 25, 8, 8],
        [25, 43, 43, 25, 25, 25, 8, 8],
        [8, 8, 8, 43, 25, 25, 8, 8],
        [25, 8, 25, 43, 25, 25, 8, 8],
        [25, 43, 8, 8, 43, 25, 8, 8],
        [8, 8, 25, 8, 43, 25, 8, 8],
        [8, 8, 8, 25, 43, 25, 8, 8],
        [8, 25, 8, 43, 43, 25, 8, 8],
        [8, 25, 43, 43, 43, 25, 8, 8],
        [8, 8, 8, 8, 8, 43, 8, 8],
        [25, 25, 8, 8, 8, 43, 8, 8],
        [8, 43, 8, 8, 8, 43, 8, 8],
        [8, 25, 25, 8, 8, 43, 8, 8],
        [8, 43, 43, 8, 8, 43, 8, 8],
        [25, 8, 8, 25, 8, 43, 8, 8],
        [8, 25, 8, 25, 8, 43, 8, 8],
        [8, 8, 25, 25, 8, 43, 8, 8],
        [43, 8, 25, 25, 8, 43, 8, 8],
        [8, 43, 8, 43, 8, 43, 8, 8],
        [8, 25, 8, 8, 25, 43, 8, 8],
        [8, 8, 8, 25, 25, 43, 8, 8],
        [43, 8, 8, 8, 43, 43, 8, 8],
        [8, 25, 25, 8, 43, 43, 8, 8],
        [25, 8, 8, 8, 8, 8, 25, 8],
        [8, 25, 8, 8, 8, 8, 25, 8],
        [8, 8, 25, 8, 8, 8, 25, 8],
        [25, 8, 43, 8, 8, 8, 25, 8],
        [8, 8, 8, 25, 8, 8, 25, 8],
        [8, 8, 43, 25, 8, 8, 25, 8],
        [8, 25, 8, 43, 8, 8, 25, 8],
        [8, 8, 25, 43, 8, 8, 25, 8],
        [25, 25, 25, 43, 8, 8, 25, 8],
        [8, 8, 8, 8, 25, 8, 25, 8],
        [8, 43, 8, 8, 25, 8, 25, 8],
        [8, 8, 43, 8, 25, 8, 25, 8],
        [8, 8, 25, 25, 25, 8, 25, 8],
        [43, 43, 25, 25, 25, 8, 25, 8],
        [8, 8, 8, 43, 25, 8, 25, 8],
        [8, 25, 43, 8, 43, 8, 25, 8],
        [25, 25, 8, 25, 43, 8, 25, 8],
        [8, 8, 8, 8, 8, 25, 25, 8],
        [8, 43, 8, 8, 8, 25, 25, 8],
        [8, 8, 43, 8, 8, 25, 25, 8],
        [25, 25, 43, 8, 8, 25, 25, 8],
        [25, 43, 8, 25, 8, 25, 25, 8],
        [8, 8, 8, 43, 8, 25, 25, 8],
        [8, 43, 25, 8, 25, 25, 25, 8],
        [43, 8, 43, 25, 25, 25, 25, 8],
        [8, 8, 8, 8, 43, 25, 25, 8],
        [43, 25, 25, 8, 43, 25, 25, 8],
        [25, 8, 8, 8, 8, 43, 25, 8],
        [8, 25, 8, 8, 8, 43, 25, 8],
        [8, 8, 25, 8, 8, 43, 25, 8],
        [8, 8, 8, 25, 8, 43, 25, 8],
        [25, 8, 8, 43, 8, 43, 25, 8],
        [8, 8, 8, 8, 25, 43, 25, 8],
        [25, 25, 8, 8, 25, 43, 25, 8],
        [8, 8, 43, 43, 25, 43, 25, 8],
        [25, 8, 25, 25, 43, 43, 25, 8],
        [8, 8, 8, 8, 8, 8, 43, 8],
        [43, 8, 8, 8, 8, 8, 43, 8],
        [43, 43, 8, 8, 8, 8, 43, 8],
        [8, 25, 8, 25, 8, 8, 43, 8],
        [25, 8, 43, 25, 8, 8, 43, 8],
        [8, 8, 8, 43, 8, 8, 43, 8],
        [43, 8, 8, 43, 8, 8, 43, 8],
        [25, 43, 43, 8, 25, 8, 43, 8],
        [8, 43, 8, 25, 25, 8, 43, 8],
        [8, 8, 8, 8, 43, 8, 43, 8],
        [43, 8, 8, 8, 43, 8, 43, 8],
        [25, 8, 8, 8, 8, 25, 43, 8],
        [8, 25, 8, 8, 8, 25, 43, 8],
        [8, 8, 25, 8, 8, 25, 43, 8],
        [8, 8, 8, 25, 8, 25, 43, 8],
        [43, 25, 25, 25, 8, 25, 43, 8],
        [8, 8, 8, 8, 25, 25, 43, 8],
        [25, 8, 8, 25, 25, 25, 43, 8],
        [8, 25, 43, 25, 25, 25, 43, 8],
        [8, 8, 25, 43, 43, 25, 43, 8],
        [8, 43, 8, 8, 8, 43, 43, 8],
        [8, 8, 43, 8, 8, 43, 43, 8],
        [8, 25, 25, 43, 8, 43, 43, 8],
        [8, 25, 8, 25, 43, 43, 43, 8],
        [25, 8, 8, 8, 8, 8, 8, 25],
        [8, 25, 8, 8, 8, 8, 8, 25],
        [8, 8, 25, 8, 8, 8, 8, 25],
        [8, 43, 25, 8, 8, 8, 8, 25],
        [25, 8, 43, 8, 8, 8, 8, 25],
        [8, 25, 43, 8, 8, 8, 8, 25],
        [8, 8, 8, 25, 8, 8, 8, 25],
        [8, 43, 8, 25, 8, 8, 8, 25],
        [43, 25, 25, 25, 8, 8, 8, 25],
        [8, 8, 43, 25, 8, 8, 8, 25],
        [25, 8, 8, 43, 8, 8, 8, 25],
        [8, 25, 8, 43, 8, 8, 8, 25],
        [8, 8, 25, 43, 8, 8, 8, 25],
        [8, 8, 8, 8, 25, 8, 8, 25],
        [8, 8, 43, 8, 25, 8, 8, 25],
        [25, 8, 43, 25, 25, 8, 8, 25],
        [8, 8, 8, 43, 25, 8, 8, 25],
        [25, 25, 8, 43, 25, 8, 8, 25],
        [25, 8, 8, 8, 43, 8, 8, 25],
        [8, 8, 25, 8, 43, 8, 8, 25],
        [8, 43, 8, 25, 43, 8, 8, 25],
        [43, 25, 25, 25, 43, 8, 8, 25],
        [8, 43, 43, 25, 43, 8, 8, 25],
        [8, 8, 8, 8, 8, 25, 8, 25],
        [8, 43, 8, 8, 8, 25, 8, 25],
        [8, 8, 43, 8, 8, 25, 8, 25],
        [8, 8, 8, 43, 8, 25, 8, 25],
        [25, 43, 25, 43, 8, 25, 8, 25],
        [43, 8, 25, 8, 25, 25, 8, 25],
        [8, 25, 43, 8, 25, 25, 8, 25],
        [8, 8, 8, 8, 43, 25, 8, 25],
        [25, 8, 8, 8, 8, 43, 8, 25],
        [8, 25, 8, 8, 8, 43, 8, 25],
        [8, 8, 25, 8, 8, 43, 8, 25],
        [8, 8, 8, 25, 8, 43, 8, 25],
        [25, 25, 8, 25, 8, 43, 8, 25],
        [8, 8, 8, 8, 25, 43, 8, 25],
        [8, 43, 25, 25, 25, 43, 8, 25],
        [25, 8, 43, 25, 25, 43, 8, 25],
        [43, 8, 8, 43, 25, 43, 8, 25],
        [25, 25, 8, 25, 43, 43, 8, 25],
        [8, 8, 25, 43, 43, 43, 8, 25],
        [8, 8, 8, 8, 8, 8, 25, 25],
        [8, 43, 8, 8, 8, 8, 25, 25],
        [25, 8, 25, 8, 8, 8, 25, 25],
        [25, 43, 25, 8, 8, 8, 25, 25],
        [8, 8, 43, 8, 8, 8, 25, 25],
        [8, 8, 8, 43, 8, 8, 25, 25],
        [8, 43, 8, 43, 8, 8, 25, 25],
        [8, 25, 8, 8, 25, 8, 25, 25],
        [43, 8, 8, 25, 25, 8, 25, 25],
        [8, 25, 43, 43, 25, 8, 25, 25],
        [25, 8, 25, 43, 43, 8, 25, 25],
        [8, 8, 25, 43, 8, 25, 25, 25],
        [43, 8, 25, 43, 8, 25, 25, 25],
        [43, 43, 8, 8, 25, 25, 25, 25],
        [25, 8, 8, 8, 43, 25, 25, 25],
        [8, 25, 25, 25, 43, 25, 25, 25],
        [8, 8, 8, 8, 8, 43, 25, 25],
        [25, 8, 25, 8, 8, 43, 25, 25],
        [25, 43, 25, 8, 8, 43, 25, 25],
        [8, 25, 43, 25, 8, 43, 25, 25],
        [8, 8, 8, 25, 25, 43, 25, 25],
        [8, 43, 8, 8, 43, 43, 25, 25],
        [8, 25, 8, 8, 8, 8, 43, 25],
        [8, 8, 25, 8, 8, 8, 43, 25],
        [8, 8, 8, 25, 8, 8, 43, 25],
        [8, 43, 43, 25, 8, 8, 43, 25],
        [8, 8, 8, 8, 25, 8, 43, 25],
        [25, 25, 25, 25, 25, 8, 43, 25],
        [8, 43, 25, 8, 43, 8, 43, 25],
        [8, 8, 43, 25, 43, 8, 43, 25],
        [8, 8, 8, 8, 8, 25, 43, 25],
        [25, 25, 8, 8, 8, 25, 43, 25],
        [8, 8, 25, 8, 25, 25, 43, 25],
        [43, 8, 25, 8, 25, 25, 43, 25],
        [8, 25, 8, 43, 25, 25, 43, 25],
        [43, 8, 8, 25, 8, 43, 43, 25],
        [8, 8, 8, 8, 8, 8, 8, 43],
        [43, 8, 8, 8, 8, 8, 8, 43],
        [43, 43, 8, 8, 8, 8, 8, 43],
        [25, 8, 8, 25, 8, 8, 8, 43],
        [43, 8, 8, 43, 8, 8, 8, 43],
        [8, 25, 8, 8, 25, 8, 8, 43],
        [8, 43, 25, 8, 25, 8, 8, 43],
        [8, 8, 8, 25, 25, 8, 8, 43],
        [25, 8, 25, 8, 43, 8, 8, 43],
        [25, 8, 8, 8, 8, 25, 8, 43],
        [8, 25, 8, 8, 8, 25, 8, 43],
        [8, 8, 25, 8, 8, 25, 8, 43],
        [25, 25, 25, 8, 8, 25, 8, 43],
        [8, 8, 8, 25, 8, 25, 8, 43],
        [8, 8, 43, 25, 8, 25, 8, 43],
        [8, 8, 8, 8, 25, 25, 8, 43],
        [43, 25, 8, 25, 25, 25, 8, 43],
        [8, 25, 25, 43, 25, 25, 8, 43],
        [25, 43, 8, 8, 43, 25, 8, 43],
        [8, 8, 8, 25, 43, 25, 8, 43],
        [8, 8, 43, 25, 43, 25, 8, 43],
        [43, 8, 8, 8, 8, 43, 8, 43],
        [8, 25, 8, 8, 25, 43, 8, 43],
        [25, 8, 25, 8, 43, 43, 8, 43],
        [8, 25, 8, 8, 8, 8, 25, 43],
        [8, 8, 25, 8, 8, 8, 25, 43],
        [8, 25, 43, 8, 8, 8, 25, 43],
        [8, 8, 8, 25, 8, 8, 25, 43],
        [25, 8, 43, 43, 8, 8, 25, 43],
        [43, 25, 25, 8, 25, 8, 25, 43],
        [8, 8, 8, 43, 25, 8, 25, 43],
        [25, 25, 8, 25, 43, 8, 25, 43],
        [8, 8, 8, 8, 8, 25, 25, 43],
        [43, 8, 43, 8, 8, 25, 25, 43],
        [8, 25, 8, 25, 8, 25, 25, 43],
        [25, 8, 25, 25, 25, 25, 25, 43],
        [25, 8, 8, 43, 8, 43, 25, 43],
        [8, 8, 43, 8, 25, 43, 25, 43],
        [43, 8, 8, 8, 8, 8, 43, 43],
        [8, 8, 25, 25, 8, 8, 43, 43],
        [25, 25, 8, 43, 8, 8, 43, 43],
        [25, 43, 8, 8, 25, 8, 43, 43],
        [8, 8, 8, 8, 43, 8, 43, 43],
        [8, 43, 25, 8, 8, 25, 43, 43],
        [8, 8, 25, 25, 8, 43, 43, 43],
        [8, 25, 8, 8, 25, 43, 43, 43],
    ]
)


kgrid_2bit_256 = torch.tensor([
            0,     2,     5,     8,    10,    17,    20,    32,    34,    40,    42,    65,    68,    80,    88,    97,
          100,   128,   130,   138,   162,   257,   260,   272,   277,   320,   388,   408,   512,   514,   546,   642,
         1025,  1028,  1040,  1057,  1060,  1088,  1090,  1096,  1120,  1153,  1156,  1168,  1188,  1280,  1282,  1288,
         1312,  1350,  1385,  1408,  1425,  1545,  1552,  1600,  1668,  1700,  2048,  2053,  2056,  2068,  2088,  2113,
         2116,  2128,  2130,  2184,  2308,  2368,  2562,  2580,  4097,  4100,  4112,  4129,  4160,  4192,  4228,  4240,
         4245,  4352,  4360,  4384,  4432,  4442,  4480,  4644,  4677,  5120,  5128,  5152,  5157,  5193,  5248,  5400,
         5474,  5632,  5654,  6145,  6148,  6160,  6208,  6273,  6400,  6405,  6560,  6737,  8192,  8194,  8202,  8260,
         8289,  8320,  8322,  8489,  8520,  8704,  8706,  9217,  9220,  9232,  9280,  9302,  9472,  9537,  9572,  9872,
        10248, 10272, 10388, 10820, 16385, 16388, 16400, 16408, 16417, 16420, 16448, 16456, 16470, 16480, 16513, 16516,
        16528, 16640, 16672, 16737, 16768, 16773, 16897, 16912, 16968, 16982, 17000, 17408, 17416, 17440, 17536, 17561,
        17682, 17700, 17920, 18433, 18436, 18448, 18496, 18501, 18688, 18776, 18785, 18818, 19013, 19088, 20480, 20488,
        20497, 20505, 20512, 20608, 20616, 20740, 20802, 20900, 21137, 21648, 21650, 21770, 22017, 22100, 22528, 22545,
        22553, 22628, 22848, 23048, 24580, 24592, 24640, 24680, 24832, 24917, 25112, 25184, 25600, 25605, 25872, 25874,
        25988, 26690, 32768, 32770, 32778, 32833, 32898, 33028, 33048, 33088, 33297, 33793, 33796, 33808, 33813, 33856,
        33888, 34048, 34118, 34196, 34313, 34368, 34400, 34818, 35076, 35345, 36868, 36880, 36900, 36928, 37025, 37142,
        37248, 37445, 37888, 37922, 37956, 38225, 39041, 39200, 40962, 41040, 41093, 41225, 41472, 42008, 43088, 43268,
]).to(dtype=torch.uint16)

q_vectors_256_255 = torch.round(q_vectors_256 * 5.93)


def init_grid_256():
    kmap_size = 43692
    res = -torch.ones((kmap_size), dtype=torch.int16)
    
    for i in range(256):
        k = kgrid_2bit_256[i]
        res[k] = i
    return res
